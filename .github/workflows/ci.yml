name: CI Checks

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read # Default permission

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22' # Match project's Go version
          cache: true
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59 # Match pre-commit hook version
          args: --verbose

  format:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
      - name: Check formatting with goimports
        run: |
          # Using goimports directly for checking
          go install golang.org/x/tools/cmd/goimports@latest
          DIFF=$(goimports -l .)
          if [ -n "$DIFF" ]; then
            echo "Code is not formatted correctly. Please run 'goimports -w .' or use the pre-commit hook."
            echo "$DIFF"
            exit 1
          fi
          echo "Code formatting is correct."

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
      - name: Run tests
        run: go test -v -race -coverprofile=coverage.out ./...

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
      - name: Build application
        run: go build -v ./cmd/server/...