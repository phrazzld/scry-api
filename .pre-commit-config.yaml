# Pre-commit hooks configuration for the Scry API project
# Run 'pre-commit install' to set up the hooks
# Run 'pre-commit run --all-files' to run all hooks on all files

repos:
  # ----------------------------------------------------------------------------
  # Standard Formatting & Validation Hooks
  # These hooks ensure consistent file formatting and catch common issues early
  # ----------------------------------------------------------------------------
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v5.0.0
    hooks:
      # Auto-fix hooks - run first
      - id: trailing-whitespace      # Fixes trailing whitespace
        args: [--markdown-linebreak-ext=md] # Preserve Markdown line breaks
      - id: end-of-file-fixer        # Ensures files end with a newline

      # Validation hooks
      - id: check-yaml                # Validates YAML syntax
      - id: check-json                # Validates JSON syntax
      - id: check-merge-conflict      # Prevents committing merge conflict markers
      - id: check-added-large-files   # Prevents committing large files (>500KB by default)

  # ----------------------------------------------------------------------------
  # Go-specific Linting & Formatting
  # These hooks ensure Go code follows project standards
  # ----------------------------------------------------------------------------
  - repo: https://github.com/golangci/golangci-lint
    rev: v2.1.1  # Same version as CI to ensure consistent results
    hooks:
      - id: golangci-lint
        args: [--verbose]  # Show more detailed output for linting issues

  - repo: https://github.com/segmentio/golines
    rev: v0.12.2
    hooks:
      - id: golines
        args: ["--max-len=120", "--base-formatter=goimports"]  # Format code, fix imports, wrap long lines

  # ----------------------------------------------------------------------------
  # Custom Local Hooks
  # Project-specific hooks implemented locally
  # ----------------------------------------------------------------------------
  - repo: local
    hooks:
      # Ensure go.mod is always tidy
      - id: go-mod-tidy
        name: go mod tidy
        entry: go mod tidy
        language: system
        types: [go]
        pass_filenames: false  # Run once per commit, not per file

      # Run glance after commit to update directory overviews
      - id: run-glance
        name: Run glance to update directory overviews
        entry: .pre-commit-hooks/run_glance.sh
        language: script
        stages: [post-commit]  # Run after commit is completed
        pass_filenames: false  # Run once per commit, not per file

      # Warn about long files without blocking commits
      - id: warn-long-files
        name: Warn on excessively long files
        description: Checks file length and warns (but doesn't fail) if a file exceeds the limit
        language: python
        entry: .pre-commit-hooks/warn_long_files.py
        types: [text]  # Run on all text files
        pass_filenames: true  # Pass each file to the script
        verbose: true  # Ensure warnings are visible

      # Fail on extremely long files to enforce codebase quality
      - id: fail-extremely-long-files
        name: Fail on extremely long files
        description: Fails the commit if any file exceeds 1000 lines
        language: python
        entry: .pre-commit-hooks/fail_extremely_long_files.py
        types: [text]  # Run on all text files
        pass_filenames: true  # Pass each file to the script
        verbose: true  # Ensure errors are visible
